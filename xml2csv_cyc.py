import xmltodict
import csv
import os
'''
Remember to customize the file paths
'''
def get_file_name(file_dir):
    '''
    Get all xml files' name
    :param file_dir:
    :return:
    '''
    files = os.listdir(file_dir)
    return files

def issn_IF():
    '''
    read ISSN-IF csv file generated by 'ISSN_IF_search.py
    :return: dict[ISSN] = IF
    '''
    global hash_issn
    hash_issn = {}
    with open(r'xxxxx\journal_ISSN_xml.csv', 'r') as csvfile:
        reader = csv.reader(csvfile)
        for row in reader:
            hash_issn[row[2]] = row[6]
    #return hash_issn


def analysis_one_xml(file_name):
    '''
    analyze one xml file
    :param xml file_name
    :return: append the results to the result-csv file
    '''
    path = os.path.join(r'xxxxx\xml_data', file_name)

    with open(path, encoding='UTF-8') as fd:  # Read XML file
        xml = xmltodict.parse(fd.read())

    extract = {}
    with open('xxxxxxxx\sql_data_2.csv', 'a', newline='',encoding='UTF-8') as f:
        #count = 0
        #print(xml['PubmedArticleSet']['PubmedArticle']['MedlineCitation']["MeshHeadingList"]["MeshHeading"])
        fieldnames = ['PMID', 'ISSN', 'PubDate', 'ArticleTitle', 'Journal', 'Authors', 'First_affiliation', 'Abstract',
                      'Meshheading', 'keywords', 'doi', 'Country', 'IF']
        writer = csv.DictWriter(f, fieldnames=fieldnames)

        for node in xml['PubmedArticleSet']['PubmedArticle']:
            #count += 1
            extract['PMID'] = node["MedlineCitation"]["PMID"]["#text"]

            try:
                extract['ISSN'] = node["MedlineCitation"]["Article"]["Journal"]["ISSN"]["#text"]
            except:
                extract['ISSN'] = 0

            if extract['ISSN'] in hash_issn:
                extract['IF'] = hash_issn[extract['ISSN']]
            else:
                extract['IF'] = 'None'

            try:
                year = str(node["MedlineCitation"]["Article"]["Journal"]["JournalIssue"]["PubDate"]["Year"])
            except:
                year = '1000'

            try:
                month = str(node["MedlineCitation"]["Article"]["Journal"]["JournalIssue"]["PubDate"]["Month"])
            except:
                month = 'Jun'

            try:
                day = str(node["MedlineCitation"]["Article"]["Journal"]["JournalIssue"]["PubDate"]["Day"])
            except:
                day = '15'

            extract['PubDate'] = year + "-" + month + "-" + day

            try:
                extract['Journal'] = node["MedlineCitation"]["Article"]['Journal']['Title']
            except:
                extract['Journal'] = 'None'

            try:
                extract['ArticleTitle'] = node["MedlineCitation"]["Article"]['ArticleTitle']
            except:
                extract['ArticleTitle'] = "None"

            try:
                extract['Abstract'] = node["MedlineCitation"]["Article"]['Abstract']['AbstractText']
            except:
                extract['Abstract'] = 'None'

            try:
                head_words = ''
                for word in node["MedlineCitation"]["MeshHeadingList"]['MeshHeading']:
                    head_words += word['DescriptorName']['#text'] + ","
                extract['Meshheading'] = head_words
            except:
                extract['Meshheading'] = 'None'

            try:
                key_words = ''
                #print(node['MedlineCitation']['KeywordList'])
                #print(node['MedlineCitation']['KeywordList']['Keyword'])
                for keyword in node['MedlineCitation']['KeywordList']['Keyword']:
                    key_words += keyword['#text'] + ','
                extract['keywords'] = key_words
            except:
                extract['keywords'] = "None"

            try:
                cnt = 0
                author_name = ''
                #print(node["MedlineCitation"]["Article"]["AuthorList"]['Author'])
                for author in node["MedlineCitation"]["Article"]["AuthorList"]['Author']:
                    #print(author['AffiliationInfo']['Affiliation'])
                    author_name += author['ForeName'] + ' ' + author['LastName'] + ','
                    if cnt == 0:
                        try:
                            extract['First_affiliation'] = author['AffiliationInfo']['Affiliation']
                        except:
                            extract['First_affiliation'] = 'None'
                        cnt == 1
                extract['Authors'] = author_name
            except:
                extract['Authors'] = 'None'

            #print(node["PubmedData"]['ArticleIdList']['ArticleId'])
            try:
                for id in node["PubmedData"]['ArticleIdList']['ArticleId']:
                    if id['@IdType'] == 'doi':
                        extract['doi'] = id['#text']
            except:
                extract['doi'] = 'None'

            try:
                extract['Country'] = node["MedlineCitation"]["MedlineJournalInfo"]['Country']
            except:
                extract['Country'] = 'None'

            writer.writerow(extract)
           # if count >= 1:
           #     break

def main():

    with open('xxxxxx\sql_data_2.csv', 'w', newline='',encoding='UTF-8') as f:
        fieldnames = ['PMID', 'ISSN', 'PubDate','ArticleTitle', 'Journal','Authors','First_affiliation','Abstract','Meshheading','keywords','doi','Country','IF']
                      #'ArticleTitle','Journal','Abstract','Authors', 'Keyword','MeshHeading','doi']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
    issn_IF()
    print("***********RUNING**************")
    files = get_file_name(r'xxxxxxxx\xml_data')
    for file_name in files:
        analysis_one_xml(file_name)

if __name__ == '__main__':
    main()
    print('***********Finished**************')

